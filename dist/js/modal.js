class Modal{#e={type:ModalType.DANGER,class:null,title:"Alert",message:"Modal message",closable:!0,spinner:null};#s=null;#t=null;constructor(e){this.#e=this.#n(this.#e,e),this.#i(),this.#a()}static success(e,s="Success",t=!0){return new Modal({type:ModalType.SUCCESS,title:s,message:e,closable:t})}static warning(e,s="Warning",t=!0){return new Modal({type:ModalType.WARNING,title:s,message:e,closable:t})}static danger(e,s="Danger",t=!0){return new Modal({type:ModalType.DANGER,title:s,message:e,closable:t})}static light(e,s="Message",t=!0){return new Modal({type:ModalType.LIGHT,title:s,message:e,closable:t})}static dark(e,s="Message",t=!0){return new Modal({type:ModalType.DARK,title:s,message:e,closable:t})}static loading(e,s=ModalSpinner.SPINNER){return new Modal({message:e,spinner:s})}close(){this.#s.classList.remove("fade-in-fwd"),this.#t.classList.remove("slide-in-blurred-top"),this.#s.classList.add("fade-out"),this.#t.classList.add("slide-out-blurred-top"),setTimeout((()=>{this.#s.remove(),this.#t.remove()}),1e3)}#i(){this.#s=(new DOMParser).parseFromString('\n\t\t\t<div class="modal-backdrop fade-in-fwd"></div>\n        ',"text/html").body.firstChild,document.querySelector("body").append(this.#s)}#a(){const e=this.#l(),s=this.#o();this.#t=(new DOMParser).parseFromString(`\n            <div class="modal slide-in-blurred-top ${this.#e.type} ${null!=this.#e.class?this.#e.class:""}">\n                ${e}\n                ${s}\n            </div>\n        `,"text/html").body.firstChild,null==this.#e.spinner&&this.#e.closable&&this.#t.querySelector("div.close").addEventListener("click",(e=>{this.close()})),document.querySelector("body").append(this.#t)}#l(){return null==this.#e.spinner?`\n            <div class="modal-header">\n                <h4>${this.#e.title}</h4>\n                ${this.#e.closable?'<div class="close"></div>':""}\n            </div>\n        `:""}#o(){return null==this.#e.spinner?`\n                <div class="modal-body">\n                    ${this.#e.message}\n                </div>\n            `:`\n                <div class="modal-spinner">\n                    <div class="spinner-icon ${this.#e.spinner}"></div>\n                    <span class="spinner-message">${this.#e.message}</span>\n                </div>\n            `}#n(e,...s){if(!e)return{};for(const t of s)if(t)for(const[s,n]of Object.entries(t))switch(Object.prototype.toString.call(n)){case"[object Object]":e[s]=e[s]||{},e[s]=this.#n(e[s],n);break;case"[object Array]":e[s]=this.#n(new Array(n.length),n);break;default:e[s]=n}return e}}const ModalType={DANGER:"danger",WARNING:"warning",SUCCESS:"success",DARK:"dark",LIGHT:"light"},ModalSpinner={CIRCLE:"circle",GEAR:"gear",GEARS:"gears",HOURGLASS:"hourglass",IPHONE_1:"iphone-1",IPHONE_2:"iphone-2",SEARCH:"search",SPINNER:"spinner"};