class Modal{#a={type:ModalType.DANGER,class:null,title:"Alert",message:"Modal message",closable:!0,spinner:null};#b=null;#c=null;#d=null;constructor(e){this.#a=this.#e(this.#a,e),this.#f(),this.#g()}set onClose(e){this.#d=e}static success(e,s="Success",t=!0){return new Modal({type:ModalType.SUCCESS,title:s,message:e,closable:t})}static warning(e,s="Warning",t=!0){return new Modal({type:ModalType.WARNING,title:s,message:e,closable:t})}static danger(e,s="Danger",t=!0){return new Modal({type:ModalType.DANGER,title:s,message:e,closable:t})}static light(e,s="Message",t=!0){return new Modal({type:ModalType.LIGHT,title:s,message:e,closable:t})}static dark(e,s="Message",t=!0){return new Modal({type:ModalType.DARK,title:s,message:e,closable:t})}static loading(e,s=ModalSpinner.SPINNER){return new Modal({message:e,spinner:s})}close(){this.#b.classList.remove("fade-in-fwd"),this.#c.classList.remove("slide-in-blurred-top"),this.#b.classList.add("fade-out"),this.#c.classList.add("slide-out-blurred-top"),setTimeout(()=>{this.#b.remove(),this.#c.remove(),null!=this.#d&&this.#d(this)},1e3)}#f(){this.#b=new DOMParser().parseFromString(`
			<div class="modal-backdrop fade-in-fwd"></div>
        `,"text/html").body.firstChild,document.querySelector("body").append(this.#b)}#g(){let e=this.#h(),s=this.#i();this.#c=new DOMParser().parseFromString(`
            <div class="modal slide-in-blurred-top ${this.#a.type} ${null!=this.#a.class?this.#a.class:""}">
                ${e}
                ${s}
            </div>
        `,"text/html").body.firstChild,null==this.#a.spinner&&this.#a.closable&&this.#c.querySelector("div.close").addEventListener("click",e=>{this.close()}),document.querySelector("body").append(this.#c)}#h(){return null==this.#a.spinner?`
            <div class="modal-header">
                <h4>${this.#a.title}</h4>
                ${this.#a.closable?'<div class="close"></div>':""}
            </div>
        `:""}#i(){return null==this.#a.spinner?`
                <div class="modal-body">
                    ${this.#a.message}
                </div>
            `:`
                <div class="modal-spinner">
                    <div class="spinner-icon ${this.#a.spinner}"></div>
                    <div class="spinner-message">
                        <span>${this.#a.message}</span>
                    </div>
                </div>
            `}#e(t,...i){if(!t)return{};for(let l of i)if(l)for(let[a,o]of Object.entries(l))switch(Object.prototype.toString.call(o)){case"[object Object]":t[a]=t[a]||{},t[a]=this.#e(t[a],o);break;case"[object Array]":t[a]=this.#e(Array(o.length),o);break;default:t[a]=o}return t}}const ModalType={DANGER:"danger",WARNING:"warning",SUCCESS:"success",DARK:"dark",LIGHT:"light"},ModalSpinner={CIRCLE:"circle",GEAR:"gear",GEARS:"gears",HOURGLASS:"hourglass",IPHONE_1:"iphone-1",IPHONE_2:"iphone-2",SEARCH:"search",SPINNER:"spinner"};